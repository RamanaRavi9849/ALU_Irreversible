`timescale 1ns / 1ps

module bit_alu_tb;

    reg [31:0] A, B;
    reg [3:0] ALU_Sel;
    wire [63:0] ALU_Out;
    wire CarryOut;

    
    bit_alu uut (
        .A(A),
        .B(B),
        .ALU_Sel(ALU_Sel),
        .ALU_Out(ALU_Out),
        .CarryOut(CarryOut)
    );

    initial begin
        
        $monitor("Time=%0t | A=%h B=%h ALU_Sel=%b | ALU_Out=%h CarryOut=%b", 
                 $time, A, B, ALU_Sel, ALU_Out, CarryOut);

      
        A = 32'h00000010; B = 32'h00000005; 
        ALU_Sel = 4'b0000; #10;  // ADD
        ALU_Sel = 4'b0001; #10;  // SUB
        ALU_Sel = 4'b0010; #10;  // AND
        ALU_Sel = 4'b0011; #10;  // OR
        ALU_Sel = 4'b0100; #10;  // XOR
        ALU_Sel = 4'b0101; #10;  // NOT A
        ALU_Sel = 4'b0110; #10;  // NOT B
        ALU_Sel = 4'b0111; #10;  // MULTIPLY
        ALU_Sel = 4'b1000; #10;  // A+1
        ALU_Sel = 4'b1001; #10;  // A-1
        ALU_Sel = 4'b1010; #10;  // B+1
        ALU_Sel = 4'b1011; #10;  // B-1
        ALU_Sel = 4'b1100; #10;  // NAND
        ALU_Sel = 4'b1101; #10;  // NOR
        ALU_Sel = 4'b1110; #10;  // XNOR
        ALU_Sel = 4'b1111; #10;  // Transfer A

       
        $finish;
    end

endmodule
